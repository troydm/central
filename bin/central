#!/usr/bin/env ruby
# frozen_string_literal: true

# -------------------------------------------------------------------------
# # central - dot files manager licensed under LGPLv3 (see LICENSE file)  |
# # written in Ruby by Dmitry Geurkov (d.geurkov@gmail.com)               |
# -------------------------------------------------------------------------

require 'central'
require 'optparse'

VERSION = 'v0.3.4'

# Force encoding for ERB files to be UTF-8 by default
Encoding.default_external = "UTF-8"

# parse extra options
ARGV.each do |option|
  if not option.empty? and option.index('-') == 0 and not ['-h', '--help', '-i', '--irb', '-n', '--no-color', '-v', '--version', '-m', '--monitor'].include?(option)
    $options.append(option)
  end
end
ARGV.delete_if { |option| $options.include?(option) }

# parse central options
options = {:color => true}
OptionParser.new do |opts|
  opts.banner = %{central #{VERSION} - created by Dmitry Geurkov (d.geurkov@gmail.com) and licensed under LGPLv3

Usage: central [options] [directory|configuration.rb, ...]

Description:  if directory is specified it will use configuration.rb file inside that directory
              if no [directory|configuration.rb] is specified
              it will use configuration.rb in current working directory

Options:}
  opts.on("-i", "--irb", "Start interactive IRB REPL") do |_|
    options[:irb] = true
  end

  opts.on("-m", "--monitor", "Monitor erb files for changes and reprocess them automatically") do |_|
    options[:monitor] = true
  end

  opts.on("-n", "--no-color", "Do not colorize output") do |_|
    options[:color] = false
  end

  opts.on("-v", "--version", "Print version") do |_|
    puts "central #{VERSION}"
    exit
  end
end.parse!

if options[:irb]
  require 'irb'
  $colored = true
  $colored = options[:color] if options[:color]
  info "Welcome to central #{VERSION} IRB repl, interactive playground for your dotcentral configuration"
  info "Please ignore warning below as central has source function, and IRB tries to create alias for irb_source"
  info "In order to use IRB's source functionality just call it without alias as irb_source"
  ARGV.clear
  IRB.start(__FILE__)
elsif options[:monitor]
  run_central(ARGV,options[:color])
  run_monitors
else
  run_central(ARGV,options[:color])
end
